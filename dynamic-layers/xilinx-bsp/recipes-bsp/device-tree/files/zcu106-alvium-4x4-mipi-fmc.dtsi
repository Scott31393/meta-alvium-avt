#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/media/xilinx-vip.h>

/*
//dt-bindings/media/xilinx-vip.h
#define XVIP_VF_YUV_422			0
#define XVIP_VF_YUV_444			1
#define XVIP_VF_RBG				2
#define XVIP_VF_YUV_420			3
#define XVIP_VF_YUVA_422		4
#define XVIP_VF_YUVA_444		5
#define XVIP_VF_RGBA			6
#define XVIP_VF_YUVA_420		7
#define XVIP_VF_YUVD_422		8
#define XVIP_VF_YUVD_444		9
#define XVIP_VF_RGBD			10
#define XVIP_VF_YUVD_420		11
#define XVIP_VF_MONO_SENSOR		12
#define XVIP_VF_CUSTOM2			13
#define XVIP_VF_CUSTOM3			14
#define XVIP_VF_CUSTOM4			15
#define XVIP_VF_VUY_422			16
#define XVIP_VF_BGRX			17
#define XVIP_VF_YUVX			18
#define XVIP_VF_XBGR			19
#define XVIP_VF_Y_GREY			20
#define XVIP_VF_XRGB			21
*/

/* MIPI CSI-2 Data Types from spec */
#define XCSI_DT_YUV4228B	0x1e
#define XCSI_DT_YUV42210B	0x1f
#define XCSI_DT_RGB444		0x20
#define XCSI_DT_RGB555		0x21
#define XCSI_DT_RGB565		0x22
#define XCSI_DT_RGB666		0x23
#define XCSI_DT_RGB888		0x24
#define XCSI_DT_RAW6		0x28
#define XCSI_DT_RAW7		0x29
#define XCSI_DT_RAW8		0x2a
#define XCSI_DT_RAW10		0x2b
#define XCSI_DT_RAW12		0x2c
#define XCSI_DT_RAW14		0x2d
#define XCSI_DT_RAW16		0x2e
#define XCSI_DT_RAW20		0x2f

/*
&mipi_csi2_rx_v_frmbuf_wr_0 {
	clock-names = "ap_clk";
	clocks = <&misc_clk_0>;
};
*/
/*
/delete-node/ &mipi_csi_port0mipi_csi2rxss_0;
/delete-node/ &mipi_csi_port1mipi_csi2rxss_0;
/delete-node/ &mipi_csi_port0mipi_csi2rxss_1;
/delete-node/ &mipi_csi_port1mipi_csi2rxss_1;
/delete-node/ &mipi_csi_port0mipi_csi2rxss_2;
/delete-node/ &mipi_csi_port1mipi_csi2rxss_2;
/delete-node/ &mipi_csi_port0mipi_csi2rxss_3;
/delete-node/ &mipi_csi_port1mipi_csi2rxss_3;
*/


&mipi_csi_port0mipi_csi2rxss_0 {
	/delete-property/ xlnx,cfa-pattern;
};
&mipi_csi_port1mipi_csi2rxss_0 {
     /delete-property/ xlnx,cfa-pattern;
};

&mipi_csi_port0mipi_csi2rxss_1 {
	/delete-property/ xlnx,cfa-pattern;
};

&mipi_csi_port1mipi_csi2rxss_1 {
	/delete-property/ xlnx,cfa-pattern;
};

&mipi_csi_port0mipi_csi2rxss_2 {
	/delete-property/ xlnx,cfa-pattern;
};

&mipi_csi_port1mipi_csi2rxss_2 {
	/delete-property/ xlnx,cfa-pattern;
};

&mipi_csi_port0mipi_csi2rxss_3 {
	/delete-node/ xlnx,cfa-pattern;
};

&mipi_csi_port1mipi_csi2rxss_3 {
	/delete-node/ xlnx,cfa-pattern;
};


/*
&mipi_csi2rxss_0 {
    /delete-node/ mipi_csi_port0mipi_csi2rxss_0;
    /delete-node/ mipi_csi_port1mipi_csi2rxss_0;
};

&mipi_csi2rxss_1 {
    /delete-node/ mipi_csi_port0mipi_csi2rxss_1;
    /delete-node/ mipi_csi_port1mipi_csi2rxss_1;
};

&mipi_csi2rxss_2 {
    /delete-node/ mipi_csi_port0mipi_csi2rxss_2;
    /delete-node/ mipi_csi_port1mipi_csi2rxss_2;
};

&mipi_csi2rxss_3 {
    /delete-node/ mipi_csi_port0mipi_csi2rxss_3;
    /delete-node/ mipi_csi_port1mipi_csi2rxss_3;
};
*/

&v_frmbuf_wr_csi_0 {
	xlnx,dma-align = <32>;
	dma-coherent;
	status = "okay";
};

&v_frmbuf_wr_csi_1 {
	xlnx,dma-align = <32>;
	dma-coherent;
	status = "okay";
};

&v_frmbuf_wr_csi_2 {
	xlnx,dma-align = <32>;
	dma-coherent;
	status = "okay";
};

&v_frmbuf_wr_csi_3 {
	xlnx,dma-align = <32>;
	dma-coherent;
	status = "okay";
};

&mipi_csi2rxss_0 {
	xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;/*<XCSI_DT_YUV4228B>;"RAW8";*/
	status = "okay";
	mipi_csi_portsmipi_csi2rxss_0: ports {
		#address-cells = <1>;
		#size-cells = <0>;
		xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
		mipi_csi_port1mipi_csi2rxss_0: port@1 {
			/* Fill cfa-pattern=rggb for raw data types, other fields video-format and video-width user needs to fill */
			reg = <1>;
			/*xlnx,cfa-pattern = "rggb";*/
			xlnx,video-format = <XVIP_VF_YUV_422>;/*<3>; XVIP_VF_RBG<12>;XVIP_VF_MONO_SENSOR*/
			xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
			xlnx,video-width = <8>;
			direction = "output";
//			mipi_csirx_outmipi_csi2rxss_0: endpoint {
//				remote-endpoint = <&v_frmbuf_wr_csi_0mipi_csi2rxss_0>;
//			};
		};
		mipi_csi_port0mipi_csi2rxss_0: port@0 {
			/* Fill cfa-pattern=rggb for raw data types, other fields video-format,video-width user needs to fill */
			/* User need to add something like remote-endpoint=<&out> under the node csiss_in:endpoint */
			reg = <0>;
			/*xlnx,cfa-pattern = "rggb";*/
			xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
			xlnx,video-format = <XVIP_VF_YUV_422>;/*<3>; XVIP_VF_RBG<12>;XVIP_VF_MONO_SENSOR*/
			xlnx,video-width = <8>;
			direction = "input";
			mipi_csi_inmipi_csi2rxss_0: endpoint {
				data-lanes = <1 2 3 4>;
				remote-endpoint = <&sensor_out_0>;
			};
		};
	};
};

&mipi_csi2rxss_1 {
	xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
	status = "okay";
	mipi_csi_portsmipi_csi2rxss_1: ports {
		#address-cells = <1>;
		#size-cells = <0>;
		xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
		mipi_csi_port1mipi_csi2rxss_1: port@1 {
			/* Fill cfa-pattern=rggb for raw data types, other fields video-format and video-width user needs to fill */
			reg = <1>;
			/*xlnx,cfa-pattern = "rggb";*/
			xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
			xlnx,video-format = <0>; /*<XVIP_VF_YUV_422>;*//*<3>; XVIP_VF_RBG<12>;XVIP_VF_MONO_SENSOR*/
			xlnx,video-width = <8>;
			direction = "output";
//			mipi_csirx_outmipi_csi2rxss_1: endpoint {
//				remote-endpoint = <&v_frmbuf_wr_csi_1mipi_csi2rxss_1>;
//			};
		};
		mipi_csi_port0mipi_csi2rxss_1: port@0 {
			/* Fill cfa-pattern=rggb for raw data types, other fields video-format,video-width user needs to fill */
			/* User need to add something like remote-endpoint=<&out> under the node csiss_in:endpoint */
			reg = <0>;
			/*xlnx,cfa-pattern = "rggb";*/
			xlnx,video-format = <XVIP_VF_YUV_422>;/*<3>; XVIP_VF_RBG<12>;XVIP_VF_MONO_SENSOR*/
			xlnx,video-width = <8>;
			xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
			direction = "input";
			mipi_csi_inmipi_csi2rxss_1: endpoint {
				data-lanes = <1 2 3 4>;
				remote-endpoint = <&sensor_out_1>;
			};
		};
	};
};

&mipi_csi2rxss_2 {
	xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;/*<XCSI_DT_RGB888>;"RAW8";*/
	status = "okay";
	mipi_csi_portsmipi_csi2rxss_2: ports {
		#address-cells = <1>;
		#size-cells = <0>;
		xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
		mipi_csi_port1mipi_csi2rxss_2: port@1 {
			/* Fill cfa-pattern=rggb for raw data types, other fields video-format and video-width user needs to fill */
			reg = <1>;
			/*xlnx,cfa-pattern = "rggb";*/
			xlnx,video-format = <XVIP_VF_YUV_422>;/*<3>; XVIP_VF_RBG<12>;XVIP_VF_MONO_SENSOR*/
			xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
			xlnx,video-width = <8>;
			direction = "output";
//			mipi_csirx_outmipi_csi2rxss_2: endpoint {
//				remote-endpoint = <&v_frmbuf_wr_csi_0mipi_csi2rxss_0>;
//			};
		};
		mipi_csi_port0mipi_csi2rxss_2: port@0 {
			/* Fill cfa-pattern=rggb for raw data types, other fields video-format,video-width user needs to fill */
			/* User need to add something like remote-endpoint=<&out> under the node csiss_in:endpoint */
			reg = <0>;
			/*xlnx,cfa-pattern = "rggb";*/
			xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
			xlnx,video-format = <XVIP_VF_YUV_422>;/*<3>; XVIP_VF_RBG<12>;XVIP_VF_MONO_SENSOR*/
			xlnx,video-width = <8>;
			direction = "input";
			mipi_csi_inmipi_csi2rxss_2: endpoint {
				data-lanes = <1 2 3 4>;
				remote-endpoint = <&sensor_out_2>;
			};
		};
	};
};

&mipi_csi2rxss_3 {
	xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;/*<XCSI_DT_YUV4228B>;"RAW8";*/
	status = "okay";
	mipi_csi_portsmipi_csi2rxss_3: ports {
		#address-cells = <1>;
		#size-cells = <0>;
		xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
		mipi_csi_port1mipi_csi2rxss_3: port@1 {
			/* Fill cfa-pattern=rggb for raw data types, other fields video-format and video-width user needs to fill */
			reg = <1>;
			/*xlnx,cfa-pattern = "rggb";*/
			xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
			xlnx,video-format = <XVIP_VF_YUV_422>;/*<3>; XVIP_VF_RBG<12>;XVIP_VF_MONO_SENSOR*/
			xlnx,video-width = <8>;
			direction = "output";
//			mipi_csirx_outmipi_csi2rxss_1: endpoint {
//				remote-endpoint = <&v_frmbuf_wr_csi_1mipi_csi2rxss_1>;
//			};
		};
		mipi_csi_port0mipi_csi2rxss_3: port@0 {
			/* Fill cfa-pattern=rggb for raw data types, other fields video-format,video-width user needs to fill */
			/* User need to add something like remote-endpoint=<&out> under the node csiss_in:endpoint */
			reg = <0>;
			/*xlnx,cfa-pattern = "rggb";*/
			xlnx,video-format = <XVIP_VF_YUV_422>;/*<3>; XVIP_VF_Y_GREY XVIP_VF_RBG<12>;XVIP_VF_MONO_SENSOR*/
			xlnx,video-width = <8>;
			xlnx,csi-pxl-format = <XCSI_DT_YUV4228B>;
			direction = "input";
			mipi_csi_inmipi_csi2rxss_3: endpoint {
				data-lanes = <1 2 3 4>;
				remote-endpoint = <&sensor_out_3>;
			};
		};
	};
};

&i2c1 {
	i2cswitch@75 {
		i2c@0 {
			eeprom@57 { /* HPC0_IIC */
				compatible = "at,24c64";
				reg = <0x57>;
			};
		};
	};
};

&axi_iic_0 {
	//clocks = <&vid_s_axi_clk>;

	avt_camera_0@3c {
		compatible = "alliedvision,avt3"; /*"alliedvision,avt_csi2";*/

		reg = <0x3c>;
		csi_id = <0>;

		/* powerdown-gpios = <&axi_gpio_0 0 GPIO_ACTIVE_LOW>;
		reset-gpios = <&axi_gpio_0 4 GPIO_ACTIVE_LOW>; */
		
		bcrm_wait_timeout = <5111>; /*<4000>;*/
		mipi_csi;
		status = "okay";

		streamon_delay = <100>; 
		x_force_reset_on_init;
		
		avt-ignore-yuv420_8_leg_avail;
		avt-ignore-yuv420_8_avail;
		avt-ignore-yuv420_10_avail;
		avt-ignore-yuv420_8_csps_avail;
		avt-ignore-yuv420_10_csps_avail;
		x_avt-ignore-yuv422_8_avail;
		avt-ignore-yuv422_10_avail;
		avt-ignore-rgb888_avail;
		avt-ignore-rgb666_avail;
		avt-ignore-rgb565_avail;
		avt-ignore-rgb555_avail;
		avt-ignore-rgb444_avail;
		avt-ignore-raw6_avail;
		avt-ignore-raw7_avail;
		avt-ignore-raw8_avail;
		avt-ignore-raw10_avail;
		avt-ignore-raw12_avail;
		avt-ignore-raw14_avail;

		port {
			sensor_out_0: endpoint {
				remote-endpoint = <&mipi_csi_inmipi_csi2rxss_0>;
				data-lanes = <1 2 3 4>;
				clock-lanes = <0>;
				link-frequencies = /bits/ 64 <750000000>;
			};
		};
	 };

	 cam_ina_0: power_sensor0@44 {
		 compatible = "ti,ina260";
		 status = "disabled";
		 reg = <0x44>;
		 shunt-resistor = <0x1194>;
	 };

	 proximity@29 {
		compatible = "st,vl53l0x";
		reg = <0x29>;
		status = "disabled";
		/* 	interrupt-parent = <&gpio>;
		interrupts = <23 IRQ_TYPE_EDGE_FALLING>;*/
	};

};

&axi_iic_1 {
	//clocks = <&vid_s_axi_clk>;

	avt_camera_1@3c {
		compatible = "alliedvision,avt3";
		reg = <0x3c>;
		csi_id = <1>;

		powerdown-gpios = <&axi_gpio_0 1 GPIO_ACTIVE_LOW>;
		reset-gpios = <&axi_gpio_0 5 GPIO_ACTIVE_LOW>;

		bcrm_wait_timeout = <5112>;
		mipi_csi;
		status = "okay";

		streamon_delay = <100>; 
		x_force_reset_on_init;
		
		avt-ignore-yuv420_8_leg_avail;
		avt-ignore-yuv420_8_avail;
		avt-ignore-yuv420_10_avail;
		avt-ignore-yuv420_8_csps_avail;
		avt-ignore-yuv420_10_csps_avail;
		x_avt-ignore-yuv422_8_avail;
		avt-ignore-yuv422_10_avail;
		avt-ignore-rgb888_avail;
		avt-ignore-rgb666_avail;
		avt-ignore-rgb565_avail;
		avt-ignore-rgb555_avail;
		avt-ignore-rgb444_avail;
		avt-ignore-raw6_avail;
		avt-ignore-raw7_avail;
		avt-ignore-raw8_avail;
		avt-ignore-raw10_avail;
		avt-ignore-raw12_avail;
		avt-ignore-raw14_avail;

		port {
			sensor_out_1: endpoint {
				remote-endpoint = <&mipi_csi_inmipi_csi2rxss_1>;
				data-lanes = <1 2 3 4>;
				clock-lanes = <0>;
				link-frequencies = /bits/ 64 <750000000>;
			};
		};
	 };

	 cam_ina_1: power_sensor1@44 {
		 compatible = "ti,ina260";
		 status = "disabled";
		 reg = <0x44>;
		 shunt-resistor = <0x1194>;
	 };

};

&axi_iic_2 {
	status = "okay";

	avt_camera_2@3c {
		compatible = "alliedvision,avt3";
		reg = <0x3c>;
		csi_id = <2>;

		/*powerdown-gpios = <&axi_gpio_0 2 GPIO_ACTIVE_LOW>;
		reset-gpios = <&axi_gpio_0 6 GPIO_ACTIVE_LOW>;*/

		bcrm_wait_timeout = <5112>;

		mipi_csi;
		status = "okay";

		streamon_delay = <100>; 
		x_force_reset_on_init;
		
		avt-ignore-yuv420_8_leg_avail;
		avt-ignore-yuv420_8_avail;
		avt-ignore-yuv420_10_avail;
		avt-ignore-yuv420_8_csps_avail;
		avt-ignore-yuv420_10_csps_avail;
		x_avt-ignore-yuv422_8_avail;
		avt-ignore-yuv422_10_avail;
		avt-ignore-rgb888_avail;
		avt-ignore-rgb666_avail;
		avt-ignore-rgb565_avail;
		avt-ignore-rgb555_avail;
		avt-ignore-rgb444_avail;
		avt-ignore-raw6_avail;
		avt-ignore-raw7_avail;
		avt-ignore-raw8_avail;
		avt-ignore-raw10_avail;
		avt-ignore-raw12_avail;
		avt-ignore-raw14_avail;

		port {
			sensor_out_2: endpoint {
				remote-endpoint = <&mipi_csi_inmipi_csi2rxss_2>;
				data-lanes = <1 2 3 4>;
				clock-lanes = <0>;
				link-frequencies = /bits/ 64 <750000000>;
			};
		};
	 };

	 cam_ina_2: power_sensor2@44 {
		 compatible = "ti,ina260";
		 status = "disabled";
		 reg = <0x44>;
		 shunt-resistor = <0x1194>;
	 };
};

&axi_iic_3 {

	avt_camera_3@3c {
		compatible = "alliedvision,avt3";
		reg = <0x3c>;
		csi_id = <3>;

		powerdown-gpios = <&axi_gpio_0 3 GPIO_ACTIVE_LOW>;
		reset-gpios = <&axi_gpio_0 7 GPIO_ACTIVE_LOW>;

		bcrm_wait_timeout = <5113>;
		mipi_csi;
		status = "okay";

		streamon_delay = <100>; 
		x_force_reset_on_init;
		
		avt-ignore-yuv420_8_leg_avail;
		avt-ignore-yuv420_8_avail;
		avt-ignore-yuv420_10_avail;
		avt-ignore-yuv420_8_csps_avail;
		avt-ignore-yuv420_10_csps_avail;
		x_avt-ignore-yuv422_8_avail;
		avt-ignore-yuv422_10_avail;
		avt-ignore-rgb888_avail;
		avt-ignore-rgb666_avail;
		avt-ignore-rgb565_avail;
		avt-ignore-rgb555_avail;
		avt-ignore-rgb444_avail;
		avt-ignore-raw6_avail;
		avt-ignore-raw7_avail;
		avt-ignore-raw8_avail;
		avt-ignore-raw10_avail;
		avt-ignore-raw12_avail;
		avt-ignore-raw14_avail;

		port {
			sensor_out_3: endpoint {
				remote-endpoint = <&mipi_csi_inmipi_csi2rxss_3>;
				data-lanes = <1 2 3 4>;
				clock-lanes = <0>;
				link-frequencies = /bits/ 64 <750000000>;
			};
		};
	 };

	 cam_ina_3: power_sensor3@44 {
		 compatible = "ti,ina260";
		 status = "disabled";
		 reg = <0x44>;
		 shunt-resistor = <0x1194>;
	 };
};

&amba_pl {
        vcap_mipi_csi2rxss_0 {
	        status = "okay";
			dma-coherent;
        };

        vcap_mipi_csi2rxss_1 {
	        status = "okay";
			dma-coherent;
        };

        vcap_mipi_csi2rxss_2 {
	        status = "okay";
			dma-coherent;
        };

        vcap_mipi_csi2rxss_3 {
	        status = "okay";
			dma-coherent;
        };

};

